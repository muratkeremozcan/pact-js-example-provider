generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Movie {
  id         Int          @id @default(autoincrement())
  name       String
  year       Int
  genres     MovieGenre[]
  actors     MovieActor[]
}


model Actor {
  id     Int          @id @default(autoincrement())
  name   String
  movies MovieActor[] // A many-to-many relationship with Movie
}

model Genre {
  id     Int          @id @default(autoincrement())
  name   String
  movies MovieGenre[] // A many-to-many relationship with Movie
}

// Internal Join Tables: MovieActor and MovieGenre are internal join tables used by Prisma 
// to manage the many-to-many relationships between Movie and Actor, and Movie and Genre, respectively.
// Exposing join tables adds unnecessary complexity to your API.

model MovieActor {
  movie     Movie  @relation(fields: [movieId], references: [id])
  movieId   Int    @map("movie_id")
  actor     Actor  @relation(fields: [actorId], references: [id])
  actorId   Int    @map("actor_id")

  @@id([movieId, actorId])
}

model MovieGenre {
  movie     Movie  @relation(fields: [movieId], references: [id])
  movieId   Int    @map("movie_id")
  genre     Genre  @relation(fields: [genreId], references: [id])
  genreId   Int    @map("genre_id")

  @@id([movieId, genreId]) // Composite primary key for the relation table
}
